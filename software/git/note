# 使用git rm和git mv进行删除和改名，保证git对该操作的跟踪

1. git add
	1). tracking the new file
	2). add the change of file into commit buffer, we can use "git commit -a" without doing the "git add".
2. git rm

3. git mv

4. git commit
5. git push [repo_name] [branch_name]
	# 该命令用于将本地的[branch_name]分支推送到远程仓库[repo_name]

6. git fetch [repo_name]
	# 用于从远程仓库抓取数据

7. git branch -b
	# 新建分支

8. git checkout
	# 切换到分支
	
9. git pull
	如果本地分支跟踪了远程仓库的某个分支，则该命令会很方便的直接抓取数据并合并到本地分支

tips:
1. 只取某个指定的标签的版本，无需clone整个库
git clone --depth 1 <repo:> -b <branch/tag>

2. 全局配置在个人用户根目录的.gitconfig文件中，局部配置在仓库路径下的.git/config文件中
git config user.name "david"
git config user.email stone.dawei@gmail.com
--global参数将写入全局配置文件

3. 关闭换行符自动转换
git config --global core.autocrlf false